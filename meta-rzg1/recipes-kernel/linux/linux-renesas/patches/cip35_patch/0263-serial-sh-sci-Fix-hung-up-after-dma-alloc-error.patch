From a8adeda797c9d93bc261d1620c0fc01abc027f8f Mon Sep 17 00:00:00 2001
From: "Nguyen Van Linh [FGA.BU13]" <LinhNv25@fsoft.com.vn>
Date: Mon, 9 Apr 2018 23:39:48 +0700
Subject: [PATCH 263/628] serial: sh-sci: Fix hung up after dma alloc error

	Commit: <a41bfbe76b3df71225ef80084c62b1e23cad51c8>
	From:	git://git.kernel.org/pub/scm/linux/kernel/git/horms/renesas-backport.git

	The sci_request_dma doesn't call setup_timer when dma_alloc_coherent
	failed. So rx_timer isn't initialized. After that, the driver switches
	from the DMA transfer to the PIO transfer. Then it calls sci_free_dma
	from sci_shutdown and hangs up because del_timer_sync of sci_free_dma
	uses rx_timer.

Signed-off-by: Kazuya Mizuguchi <kazuya.mizuguchi.ks@renesas.com>
Signed-off-by: tungvo <tung.vo.eb@rvc.renesas.com>
Signed-off-by: Nguyen Van Linh [FGA.BU13] <LinhNv25@fsoft.com.vn>
Signed-off-by: vietn <vietn@fsoft.com.vn>
---
 drivers/tty/serial/sh-sci.c | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/drivers/tty/serial/sh-sci.c b/drivers/tty/serial/sh-sci.c
index 942b08c..9521a9c 100644
--- a/drivers/tty/serial/sh-sci.c
+++ b/drivers/tty/serial/sh-sci.c
@@ -1481,7 +1481,10 @@ static void sci_free_dma(struct uart_port *port)
 {
 	struct sci_port *s = to_sci_port(port);
 
-	del_timer_sync(&s->rx_timer);
+	if (s->rx_timer.function != NULL) {
+		del_timer_sync(&s->rx_timer);
+		s->rx_timer.function = NULL;
+	}
 
 	if (s->chan_tx)
 		sci_tx_dma_release(s, false);
-- 
2.7.4

