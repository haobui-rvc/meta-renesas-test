From cd1d65c27fa3d0d037ad2f6522c25dd5e269f287 Mon Sep 17 00:00:00 2001
From: "Nguyen Van Tu [FGA.AIS]" <TuNV16@fsoft.com.vn>
Date: Tue, 25 Sep 2018 09:29:17 +0700
Subject: [PATCH 003/628] Add DT smp support

Signed-off-by: vietn <vietn@fsoft.com.vn>
Signed-off-by: Nguyen Van Tu [FGA.AIS] <TuNV16@fsoft.com.vn>
---
 arch/arm/mach-shmobile/common.h       |  2 ++
 arch/arm/mach-shmobile/headsmp.S      | 34 ++++++++++++++++++++++++++++++++++
 arch/arm/mach-shmobile/platsmp.c      |  6 ++++++
 arch/arm/mach-shmobile/pm-rcar-gen2.c |  9 +++------
 4 files changed, 45 insertions(+), 6 deletions(-)

diff --git a/arch/arm/mach-shmobile/common.h b/arch/arm/mach-shmobile/common.h
index 5c7f24e..d3560a5 100644
--- a/arch/arm/mach-shmobile/common.h
+++ b/arch/arm/mach-shmobile/common.h
@@ -15,12 +15,14 @@ extern void shmobile_smp_sleep(void);
 extern void shmobile_smp_hook(unsigned int cpu, unsigned long fn,
 			      unsigned long arg);
 extern bool shmobile_smp_cpu_can_disable(unsigned int cpu);
+extern bool shmobile_smp_init_fallback_ops(void);
 extern void shmobile_boot_apmu(void);
 extern void shmobile_boot_scu(void);
 extern void shmobile_smp_scu_prepare_cpus(unsigned int max_cpus);
 extern void shmobile_smp_scu_cpu_die(unsigned int cpu);
 extern int shmobile_smp_scu_cpu_kill(unsigned int cpu);
 extern struct platform_suspend_ops shmobile_suspend_ops;
+extern void shmobile_invalidate_start(void);
 
 #ifdef CONFIG_SUSPEND
 int shmobile_suspend_init(void);
diff --git a/arch/arm/mach-shmobile/headsmp.S b/arch/arm/mach-shmobile/headsmp.S
index cef8e8c..1511947 100644
--- a/arch/arm/mach-shmobile/headsmp.S
+++ b/arch/arm/mach-shmobile/headsmp.S
@@ -92,6 +92,40 @@ shmobile_boot_size_gen2:
 	.long	. - shmobile_boot_vector_gen2
 #endif /* CONFIG_ARCH_RCAR_GEN2 */
 
+
+#ifdef CONFIG_SMP
+ENTRY(shmobile_invalidate_start)
+	bl	v7_invalidate_l1
+
+	mrc	p15, 0, r0, c0, c0, 0		/* get Main ID */
+	ubfx	r1, r0, #4, #4			/* r1=Lo 4bit of Primary Part */
+	cmp	r1, #0x07
+	bne	1f
+	ubfx	r1, r0, #8, #8			/* r1=Hi 8bit of Primary Part */
+	cmp	r1, #0xC0
+	bne	1f
+	/* CA7 setup */
+	/* CNTVOFF has to be initialized either from non-secure Hypervisor
+	 * mode or secure Monitor mode with SCR.NS==1. If TrustZone is enabled
+	 * then it should be handled by the secure code */
+	cps	0x16
+	mrc	p15, 0, r1, c1, c1, 0		/* get Secure Config */
+	orr	r0, r1, #1
+	mcr	p15, 0, r0, c1, c1, 0		/* Set Non Secure bit */
+	isb
+	mov	r0, #0
+	mcrr	p15, 4, r0, r0, c14		/* CNTVOFF = 0 */
+	isb
+	mcr	p15, 0, r1, c1, c1, 0		/* Set Secure bit */
+	isb
+	cps	0x13
+1:
+
+	b	secondary_startup
+ENDPROC(shmobile_invalidate_start)
+#endif
+
+
 /*
  * Per-CPU SMP boot function/argument selection code based on MPIDR
  */
diff --git a/arch/arm/mach-shmobile/platsmp.c b/arch/arm/mach-shmobile/platsmp.c
index b23378f..767cc44 100644
--- a/arch/arm/mach-shmobile/platsmp.c
+++ b/arch/arm/mach-shmobile/platsmp.c
@@ -36,3 +36,9 @@ bool shmobile_smp_cpu_can_disable(unsigned int cpu)
 	return true; /* Hotplug of any CPU is supported */
 }
 #endif
+
+bool __init shmobile_smp_init_fallback_ops(void)
+{
+	/* fallback on PSCI/smp_ops if no other DT based method is detected */
+	return platform_can_secondary_boot() ? true : false;
+}
\ No newline at end of file
diff --git a/arch/arm/mach-shmobile/pm-rcar-gen2.c b/arch/arm/mach-shmobile/pm-rcar-gen2.c
index 419575e..b86e277 100644
--- a/arch/arm/mach-shmobile/pm-rcar-gen2.c
+++ b/arch/arm/mach-shmobile/pm-rcar-gen2.c
@@ -15,10 +15,10 @@
 #include <linux/of.h>
 #include <linux/of_address.h>
 #include <linux/smp.h>
+#include <linux/soc/renesas/rcar-sysc.h>
 #include <asm/io.h>
 #include <asm/cputype.h>
 #include "common.h"
-#include "pm-rcar.h"
 #include "rcar-gen2.h"
 
 /* RST */
@@ -54,11 +54,7 @@ static inline u32 phys_to_sbar(phys_addr_t addr)
 
 static void __init rcar_gen2_sysc_init(u32 syscier)
 {
-	void __iomem *base = rcar_sysc_init(0xe6180000);
-
-	/* enable all interrupt sources, but do not use interrupt handler */
-	iowrite32(syscier, base + SYSCIER);
-	iowrite32(0, base + SYSCIMR);
+	rcar_sysc_init(0xe6180000, syscier);
 }
 
 #else /* CONFIG_SMP */
@@ -75,6 +71,7 @@ void __init rcar_gen2_pm_init(void)
 	struct device_node *np, *cpus;
 	bool has_a7 = false;
 	bool has_a15 = false;
+	phys_addr_t boot_vector_addr = ICRAM1;
 	struct resource res;
 	u32 syscier = 0;
 	int error;
-- 
2.7.4

