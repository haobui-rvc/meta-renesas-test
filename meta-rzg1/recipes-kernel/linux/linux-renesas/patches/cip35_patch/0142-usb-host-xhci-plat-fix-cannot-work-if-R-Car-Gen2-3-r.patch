From 9c16240b895ae68a7d8fac300c119c371e3e5280 Mon Sep 17 00:00:00 2001
From: vietn <vietn@fsoft.com.vn>
Date: Mon, 25 Dec 2017 13:35:49 +0700
Subject: [PATCH 142/628] usb: host: xhci-plat: fix cannot work if R-Car Gen2/3
 run on above 4GB phys

    This patch fixes an issue that cannot work if R-Car Gen2/3 run on
    above 4GB physical memory environment to use a quirk XHCI_NO_64BIT_SUPPORT.

    Cc: <stable@vger.kernel.org>
    Signed-off-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Reviewed-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    (cherry picked from commit 5ad3b03e4910f9f62342956ecdc758c7af6b8699)
    Signed-off-by: Binh Nguyen <binh.nguyen.uw@rvc.renesas.com>

    Conflicts:
        drivers/usb/host/xhci-plat.c

Signed-off-by: vietn <vietn@fsoft.com.vn>
Signed-off-by: Nguyen Van Linh [FGA.BU13] <LinhNV25@fsoft.com.vn>
---
 drivers/usb/host/xhci-plat.c | 12 ++++++++++++
 1 file changed, 12 insertions(+)

diff --git a/drivers/usb/host/xhci-plat.c b/drivers/usb/host/xhci-plat.c
index 8f80da4..152e33b 100644
--- a/drivers/usb/host/xhci-plat.c
+++ b/drivers/usb/host/xhci-plat.c
@@ -38,12 +38,24 @@ static const struct xhci_driver_overrides xhci_plat_overrides __initconst = {
 
 static void xhci_plat_quirks(struct device *dev, struct xhci_hcd *xhci)
 {
+	struct usb_hcd *hcd = xhci_to_hcd(xhci);
+	struct device_node *of_node = hcd->self.controller->of_node;
 	/*
 	 * As of now platform drivers don't provide MSI support so we ensure
 	 * here that the generic code does not try to make a pci_dev from our
 	 * dev struct in order to setup MSI
 	 */
 	xhci->quirks |= XHCI_PLAT;
+
+	/*
+	 * On R-Car Gen2 and Gen3, the AC64 bit (bit 0) of HCCPARAMS1 is set
+	 * to 1. However, these SoCs don't support 64-bit address memory
+	 * pointers. So, this driver clears the AC64 bit of xhci->hcc_params
+	 * to call dma_set_coherent_mask(dev, DMA_BIT_MASK(32)) in
+	 * xhci_gen_setup().
+	 */
+	if (of_device_is_compatible(of_node, "renesas,xhci-r8a7743"))
+		xhci->quirks |= XHCI_NO_64BIT_SUPPORT;
 }
 
 /* called during probe() after chip reset completes */
-- 
2.7.4

