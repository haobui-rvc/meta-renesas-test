From a03c48b5ccced6dee6ba75ee02a3740ca2d26520 Mon Sep 17 00:00:00 2001
From: Viet Nguyen <vietn@fsoft.com.vn>
Date: Thu, 24 May 2018 02:56:25 +0700
Subject: [PATCH 255/628] serial: sh-sci: Fix issue of frequent rx_full
 interrupt

	Commit: <d2df40debb5f1067791f0600dbe38c16216c5a6e>
	From:	git://git.kernel.org/pub/scm/linux/kernel/git/horms/renesas-backport.git

	When the receive FIFO is not read in PIO transfer, rx_full interrupt
	occurs frequently. This patch avoids it by discarding the receive FIFO.

Signed-off-by: Kazuya Mizuguchi <kazuya.mizuguchi.ks@renesas.com>
Signed-off-by: tungvo <tung.vo.eb@rvc.renesas.com>
Signed-off-by: Nguyen Van Linh [FGA.BU13] <LinhNv25@fsoft.com.vn>
Signed-off-by: Viet Nguyen <vietn@fsoft.com.vn>
Signed-off-by: vietn <vietn@fsoft.com.vn>
---
 drivers/tty/serial/sh-sci.c | 17 ++++++++++++++++-
 1 file changed, 16 insertions(+), 1 deletion(-)

diff --git a/drivers/tty/serial/sh-sci.c b/drivers/tty/serial/sh-sci.c
index d2ecf85..a65e708 100644
--- a/drivers/tty/serial/sh-sci.c
+++ b/drivers/tty/serial/sh-sci.c
@@ -119,6 +119,7 @@ struct sci_port {
 #endif
 
 	bool autorts;
+	u64  rxfull_time;
 };
 
 #define SCI_NPORTS CONFIG_SERIAL_SH_SCI_NR_UARTS
@@ -777,12 +778,26 @@ static void sci_receive_chars(struct uart_port *port)
 		return;
 
 	while (1) {
+		int rxfill = sci_rxfill(port);
+		u64 now = get_jiffies_64();
 		/* Don't copy more bytes than there is room for in the buffer */
 		count = tty_buffer_request_room(tport, sci_rxfill(port));
 
 		/* If for any reason we can't copy more data, we're done! */
-		if (count == 0)
+		if (count == 0) {
+			int n;
+			/* discarded bytes in RX-FIFO */
+			for (n = 0; n < rxfill; n++)
+				serial_port_in(port, SCxRDR);
+			if (rxfill > 0 &&
+			time_after64(now, sci_port->rxfull_time + (5*HZ))) {
+				sci_port->rxfull_time = now;
+				dev_warn(port->dev,
+				"RX-FIFO isn't read, so %d bytes is discarded.\n",
+				rxfill);
+			}
 			break;
+		}
 
 		if (port->type == PORT_SCI) {
 			char c = serial_port_in(port, SCxRDR);
-- 
2.7.4

