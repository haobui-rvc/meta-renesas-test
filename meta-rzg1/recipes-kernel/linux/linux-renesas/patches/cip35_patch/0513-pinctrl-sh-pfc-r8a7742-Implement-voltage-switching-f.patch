From 87f02390f96f190af908868cb16ddbcff88ed22e Mon Sep 17 00:00:00 2001
From: Danh Duong <danhdc1@fsoft.com.vn>
Date: Wed, 14 Nov 2018 16:23:03 +0700
Subject: [PATCH 513/628] pinctrl: sh-pfc: r8a7742: Implement voltage switching
 for SDHI

All the SHDIs can operate with either 3.3V or 1.8V signals,
depending on negotiation with the card.

Implement the {get,set}_io_voltage operations
and set the related capability flag for the associated pins.

Based on Wolfram Sang work.
Commit id: <60d8fcef13e60484ecc5aa2c0a904b250750beba>

Signed-off-by: hienhuynh <hien.huynh.px@rvc.renenas.com>
Signed-off-by: vietn <vietn@fsoft.com.vn>
---
 drivers/pinctrl/sh-pfc/pfc-r8a7742.c | 50 +++++++++++++++++++++++++++++++++++-
 1 file changed, 49 insertions(+), 1 deletion(-)

diff --git a/drivers/pinctrl/sh-pfc/pfc-r8a7742.c b/drivers/pinctrl/sh-pfc/pfc-r8a7742.c
index 0042c05..1edd77d 100644
--- a/drivers/pinctrl/sh-pfc/pfc-r8a7742.c
+++ b/drivers/pinctrl/sh-pfc/pfc-r8a7742.c
@@ -18,6 +18,7 @@
  */
 
 #include <linux/kernel.h>
+#include <linux/io.h>
 
 #include "core.h"
 #include "sh_pfc.h"
@@ -43,7 +44,7 @@
 	PORT_GP_32(0, fn, sfx),						\
 	PORT_GP_30(1, fn, sfx),						\
 	PORT_GP_30(2, fn, sfx),						\
-	PORT_GP_32(3, fn, sfx),						\
+	PORT_GP_CFG_32(3, fn, sfx, SH_PFC_PIN_CFG_IO_VOLTAGE),		\
 	PORT_GP_32(4, fn, sfx),						\
 	PORT_GP_32(5, fn, sfx)
 
@@ -5370,8 +5371,55 @@ static const struct pinmux_cfg_reg pinmux_config_regs[] = {
 	{ },
 };
 
+#define IOCTRL6 0x8c
+
+static int r8a7742_get_io_voltage(struct sh_pfc *pfc, unsigned int pin)
+{
+	u32 data, mask;
+
+	if (WARN(pin < RCAR_GP_PIN(3, 0) ||
+			pin > RCAR_GP_PIN(3, 31), "invalid pin %#x", pin))
+		return -EINVAL;
+
+	data = ioread32(pfc->windows->virt + IOCTRL6);
+
+	mask = 0x80000000 >> (pin & 0x1f);
+	return (data & mask) ? 3300 : 1800;
+};
+
+static int r8a7742_set_io_voltage(struct sh_pfc *pfc, unsigned int pin, u16 mV)
+{
+	u32 data, mask;
+
+	if (WARN(pin < RCAR_GP_PIN(3, 0) ||
+			pin > RCAR_GP_PIN(3, 31), "invalid pin %#x", pin))
+		return -EINVAL;
+	if (mV != 1800 && mV != 3300)
+		return -EINVAL;
+
+	data = ioread32(pfc->windows->virt + IOCTRL6);
+
+	mask = 0x80000000 >> (pin & 0x1f);
+
+	if (mV == 3300)
+		data |= mask;
+	else
+		data &= ~mask;
+
+	iowrite32(~data, pfc->windows->virt); /* unlock reg */
+	iowrite32(data, pfc->windows->virt + IOCTRL6);
+
+	return 0;
+};
+
+static const struct sh_pfc_soc_operations pinmux_ops = {
+	.get_io_voltage = r8a7742_get_io_voltage,
+	.set_io_voltage = r8a7742_set_io_voltage,
+};
+
 const struct sh_pfc_soc_info r8a7742_pinmux_info = {
 	.name = "r8a7742_pfc",
+	.ops = &pinmux_ops,
 	.unlock_reg = 0xe6060000, /* PMMR */
 
 	.function = { PINMUX_FUNCTION_BEGIN, PINMUX_FUNCTION_END },
-- 
2.7.4

