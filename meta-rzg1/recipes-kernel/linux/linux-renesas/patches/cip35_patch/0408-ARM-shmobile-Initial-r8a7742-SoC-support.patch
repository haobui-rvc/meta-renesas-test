From 6c7a0b62e11d518d97bca33165d8c25e6179a31d Mon Sep 17 00:00:00 2001
From: ChinhPC <chinhpc@fsoft.com.vn>
Date: Tue, 13 Aug 2019 15:58:41 +0700
Subject: [PATCH 408/628] ARM: shmobile: Initial r8a7742 SoC support

Add initial support for r8a7742 SoC including:
        - 4 Cortex-A15 CPU Cores
        - 4 Cortex-A7 CPU Cores
        - GIC
        - Architecture timer

Signed-off-by: Binh Nguyen <binh.nguyen.uw@rvc.renesas.com>
Signed-off-by: vietn <vietn@fsoft.com.vn>
Signed-off-by: thongsyho <thong.ho.px@rvc.renesas.com>
Signed-off-by: Nguyen Van Tu [FGA.AIS] <TuNV16@fsoft.com.vn>
Signed-off-by: ChinhPC <chinhpc@fsoft.com.vn>
---
 arch/arm/boot/dts/r8a7742.dtsi         | 120 +++++++++++++++++++++++++++++++++
 arch/arm/configs/multi_v7_defconfig    |   1 +
 arch/arm/configs/shmobile_defconfig    |   1 +
 arch/arm/mach-shmobile/Kconfig         |   5 ++
 arch/arm/mach-shmobile/Makefile        |   2 +
 arch/arm/mach-shmobile/pm-rcar-gen2.c  |   2 +
 arch/arm/mach-shmobile/r8a7742.h       |   6 ++
 arch/arm/mach-shmobile/setup-r8a7742.c |  38 +++++++++++
 arch/arm/mach-shmobile/smp-r8a7742.c   |  71 +++++++++++++++++++
 9 files changed, 246 insertions(+)
 create mode 100644 arch/arm/boot/dts/r8a7742.dtsi
 create mode 100644 arch/arm/mach-shmobile/r8a7742.h
 create mode 100644 arch/arm/mach-shmobile/setup-r8a7742.c
 create mode 100644 arch/arm/mach-shmobile/smp-r8a7742.c

diff --git a/arch/arm/boot/dts/r8a7742.dtsi b/arch/arm/boot/dts/r8a7742.dtsi
new file mode 100644
index 0000000..2ada79c
--- /dev/null
+++ b/arch/arm/boot/dts/r8a7742.dtsi
@@ -0,0 +1,120 @@
+/*
+ * Device Tree Source for the r8a7742 SoC
+ *
+ * Copyright (C) 2018 Renesas Electronics Corporation
+ * Copyright (C) 2015 Renesas Electronics Corporation
+ * Copyright (C) 2013-2014 Renesas Solutions Corp.
+ * Copyright (C) 2014 Cogent Embedded Inc.
+ *
+ * This file is licensed under the terms of the GNU General Public License
+ * version 2.  This program is licensed "as is" without any warranty of any
+ * kind, whether express or implied.
+ */
+
+#include <dt-bindings/clock/r8a7742-clock.h>
+#include <dt-bindings/interrupt-controller/arm-gic.h>
+#include <dt-bindings/interrupt-controller/irq.h>
+
+/ {
+	compatible = "renesas,r8a7742";
+	interrupt-parent = <&gic>;
+	#address-cells = <2>;
+	#size-cells = <2>;
+
+	cpus {
+		#address-cells = <1>;
+		#size-cells = <0>;
+
+		cpu0: cpu@0 {
+			device_type = "cpu";
+			compatible = "arm,cortex-a15";
+			reg = <0>;
+			clock-frequency = <1400000000>;
+			voltage-tolerance = <1>; /* 1% */
+			clocks = <&cpg_clocks R8A7742_CLK_Z>;
+			clock-latency = <300000>; /* 300 us */
+
+			/* kHz - uV - OPPs unknown yet */
+			operating-points = <1400000 1000000>,
+					<1225000 1000000>,
+					<1050000 1000000>,
+					< 875000 1000000>,
+					< 700000 1000000>,
+					< 350000 1000000>;
+		};
+
+		cpu1: cpu@1 {
+			device_type = "cpu";
+			compatible = "arm,cortex-a15";
+			reg = <1>;
+			clock-frequency = <1400000000>;
+		};
+
+		cpu2: cpu@2 {
+			device_type = "cpu";
+			compatible = "arm,cortex-a15";
+			reg = <2>;
+			clock-frequency = <1400000000>;
+		};
+
+		cpu3: cpu@3 {
+			device_type = "cpu";
+			compatible = "arm,cortex-a15";
+			reg = <3>;
+			clock-frequency = <1400000000>;
+		};
+
+		cpu4: cpu@4 {
+			device_type = "cpu";
+			compatible = "arm,cortex-a7";
+			reg = <0x100>;
+			clock-frequency = <780000000>;
+		};
+
+		cpu5: cpu@5 {
+			device_type = "cpu";
+			compatible = "arm,cortex-a7";
+			reg = <0x101>;
+			clock-frequency = <780000000>;
+		};
+
+		cpu6: cpu@6 {
+			device_type = "cpu";
+			compatible = "arm,cortex-a7";
+			reg = <0x102>;
+			clock-frequency = <780000000>;
+		};
+
+		cpu7: cpu@7 {
+			device_type = "cpu";
+			compatible = "arm,cortex-a7";
+			reg = <0x103>;
+			clock-frequency = <780000000>;
+		};
+	};
+
+	gic: interrupt-controller@f1001000 {
+		compatible = "arm,gic-400";
+		#interrupt-cells = <3>;
+		#address-cells = <0>;
+		interrupt-controller;
+		reg = <0 0xf1001000 0 0x1000>,
+			<0 0xf1002000 0 0x1000>,
+			<0 0xf1004000 0 0x2000>,
+			<0 0xf1006000 0 0x2000>;
+		interrupts = <1 9 (GIC_CPU_MASK_SIMPLE(4) |
+					IRQ_TYPE_LEVEL_HIGH)>;
+	};
+
+	timer {
+		compatible = "arm,armv7-timer";
+		interrupts = <1 13 (GIC_CPU_MASK_SIMPLE(4) |
+					IRQ_TYPE_LEVEL_LOW)>,
+				<1 14 (GIC_CPU_MASK_SIMPLE(4) |
+					IRQ_TYPE_LEVEL_LOW)>,
+				<1 11 (GIC_CPU_MASK_SIMPLE(4) |
+					IRQ_TYPE_LEVEL_LOW)>,
+				<1 10 (GIC_CPU_MASK_SIMPLE(4) |
+					IRQ_TYPE_LEVEL_LOW)>;
+	};
+};
\ No newline at end of file
diff --git a/arch/arm/configs/multi_v7_defconfig b/arch/arm/configs/multi_v7_defconfig
index cfaf564..fa2bdbb 100644
--- a/arch/arm/configs/multi_v7_defconfig
+++ b/arch/arm/configs/multi_v7_defconfig
@@ -86,6 +86,7 @@ CONFIG_ARCH_R8A77470=y
 CONFIG_ARCH_R8A7778=y
 CONFIG_ARCH_R8A7779=y
 CONFIG_ARCH_R8A7790=y
+CONFIG_ARCH_R8A7742=y
 CONFIG_ARCH_R8A7791=y
 CONFIG_ARCH_R8A7793=y
 CONFIG_ARCH_R8A7794=y
diff --git a/arch/arm/configs/shmobile_defconfig b/arch/arm/configs/shmobile_defconfig
index 6798768..9d5f757 100644
--- a/arch/arm/configs/shmobile_defconfig
+++ b/arch/arm/configs/shmobile_defconfig
@@ -24,6 +24,7 @@ CONFIG_ARCH_R8A77470=y
 CONFIG_ARCH_R8A7778=y
 CONFIG_ARCH_R8A7779=y
 CONFIG_ARCH_R8A7790=y
+CONFIG_ARCH_R8A7742=y
 CONFIG_ARCH_R8A7791=y
 CONFIG_ARCH_R8A7793=y
 CONFIG_ARCH_R8A7794=y
diff --git a/arch/arm/mach-shmobile/Kconfig b/arch/arm/mach-shmobile/Kconfig
index 6854b1c..8779ef8 100644
--- a/arch/arm/mach-shmobile/Kconfig
+++ b/arch/arm/mach-shmobile/Kconfig
@@ -92,6 +92,11 @@ config ARCH_R8A7790
 	select ARCH_RCAR_GEN2
 	select I2C
 
+config ARCH_R8A7742
+	bool "RZ/G1H (R8A77420)"
+	select ARCH_RCAR_GEN2
+	select I2C
+
 config ARCH_R8A7791
 	bool "R-Car M2-W (R8A77910)"
 	select ARCH_RCAR_GEN2
diff --git a/arch/arm/mach-shmobile/Makefile b/arch/arm/mach-shmobile/Makefile
index 49710bf..788b48c 100644
--- a/arch/arm/mach-shmobile/Makefile
+++ b/arch/arm/mach-shmobile/Makefile
@@ -12,6 +12,7 @@ obj-$(CONFIG_ARCH_R8A7740)	+= setup-r8a7740.o
 obj-$(CONFIG_ARCH_R8A7778)	+= setup-r8a7778.o
 obj-$(CONFIG_ARCH_R8A7779)	+= setup-r8a7779.o pm-r8a7779.o
 obj-$(CONFIG_ARCH_R8A7790)	+= setup-r8a7790.o
+obj-$(CONFIG_ARCH_R8A7790)	+= setup-r8a7742.o
 obj-$(CONFIG_ARCH_R8A7791)	+= setup-r8a7791.o
 obj-$(CONFIG_ARCH_R8A7745)      += setup-r8a7745.o sgx-r8a7745-quirk.o
 obj-$(CONFIG_ARCH_R8A7744)	+= setup-r8a7744.o
@@ -34,6 +35,7 @@ smp-y				:= $(cpu-y)
 smp-$(CONFIG_ARCH_SH73A0)	+= smp-sh73a0.o headsmp-scu.o platsmp-scu.o
 smp-$(CONFIG_ARCH_R8A7779)	+= smp-r8a7779.o headsmp-scu.o platsmp-scu.o
 smp-$(CONFIG_ARCH_R8A7790)	+= smp-r8a7790.o
+smp-$(CONFIG_ARCH_R8A7790)	+= smp-r8a7742.o
 smp-$(CONFIG_ARCH_R8A7791)	+= smp-r8a7791.o
 smp-$(CONFIG_ARCH_R8A7744)	+= smp-r8a7744.o
 smp-$(CONFIG_ARCH_EMEV2)	+= smp-emev2.o headsmp-scu.o platsmp-scu.o
diff --git a/arch/arm/mach-shmobile/pm-rcar-gen2.c b/arch/arm/mach-shmobile/pm-rcar-gen2.c
index b86e277..6cdb64c 100644
--- a/arch/arm/mach-shmobile/pm-rcar-gen2.c
+++ b/arch/arm/mach-shmobile/pm-rcar-gen2.c
@@ -92,6 +92,8 @@ void __init rcar_gen2_pm_init(void)
 
 	if (of_machine_is_compatible("renesas,r8a7790"))
 		syscier = 0x013111ef;
+	else if (of_machine_is_compatible("renesas,r8a7742"))
+		syscier = 0x013111ef;
 	else if (of_machine_is_compatible("renesas,r8a7791"))
 		syscier = 0x00111003;
 	else if (of_machine_is_compatible("renesas,r8a7743"))
diff --git a/arch/arm/mach-shmobile/r8a7742.h b/arch/arm/mach-shmobile/r8a7742.h
new file mode 100644
index 0000000..ba6dfbe
--- /dev/null
+++ b/arch/arm/mach-shmobile/r8a7742.h
@@ -0,0 +1,6 @@
+#ifndef __ASM_R8A7742_H__
+#define __ASM_R8A7742_H__
+
+extern struct smp_operations r8a7742_smp_ops;
+
+#endif /* __ASM_R8A7742_H__ */
\ No newline at end of file
diff --git a/arch/arm/mach-shmobile/setup-r8a7742.c b/arch/arm/mach-shmobile/setup-r8a7742.c
new file mode 100644
index 0000000..281975c
--- /dev/null
+++ b/arch/arm/mach-shmobile/setup-r8a7742.c
@@ -0,0 +1,38 @@
+/*
+ * r8a7742 processor support
+ *
+ * Copyright (C) 2013-2018  Renesas Solutions Corp.
+ * Copyright (C) 2013  Magnus Damm
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; version 2 of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+#include <linux/init.h>
+
+#include <asm/mach/arch.h>
+
+#include "common.h"
+#include "r8a7742.h"
+#include "rcar-gen2.h"
+
+static const char * const r8a7742_boards_compat_dt[] __initconst = {
+	"renesas,r8a7742",
+	NULL,
+};
+
+DT_MACHINE_START(R8A7742_DT, "Generic R8A7742 (Flattened Device Tree)")
+	.smp_init	= shmobile_smp_init_fallback_ops,
+	.smp		= smp_ops(r8a7742_smp_ops),
+	.init_early	= shmobile_init_delay,
+	.init_time	= rcar_gen2_timer_init,
+	.init_late	= shmobile_init_late,
+	.reserve	= rcar_gen2_reserve,
+	.dt_compat	= r8a7742_boards_compat_dt,
+MACHINE_END
\ No newline at end of file
diff --git a/arch/arm/mach-shmobile/smp-r8a7742.c b/arch/arm/mach-shmobile/smp-r8a7742.c
new file mode 100644
index 0000000..7077141
--- /dev/null
+++ b/arch/arm/mach-shmobile/smp-r8a7742.c
@@ -0,0 +1,71 @@
+/*
+ * SMP support for r8a7742
+ *
+ * Copyright (C) 2012-2018 Renesas Solutions Corp.
+ * Copyright (C) 2012 Takashi Yoshii <takashi.yoshii.ze@renesas.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; version 2 of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+#include <linux/kernel.h>
+#include <linux/init.h>
+#include <linux/smp.h>
+#include <linux/io.h>
+#include <linux/soc/renesas/rcar-sysc.h>
+
+#include <asm/smp_plat.h>
+
+#include "common.h"
+#include "platsmp-apmu.h"
+#include "rcar-gen2.h"
+#include "r8a7742.h"
+
+static const struct rcar_sysc_ch r8a7742_ca15_scu = {
+	.chan_offs = 0x180, /* PWRSR5 .. PWRER5 */
+	.isr_bit = 12, /* CA15-SCU */
+};
+
+static const struct rcar_sysc_ch r8a7742_ca7_scu = {
+	.chan_offs = 0x100, /* PWRSR3 .. PWRER3 */
+	.isr_bit = 21, /* CA7-SCU */
+};
+
+static struct rcar_apmu_config r8a7742_apmu_config[] = {
+	{
+		.iomem = DEFINE_RES_MEM(0xe6152000, 0x188),
+		.cpus = { 0, 1, 2, 3 },
+	},
+	{
+		.iomem = DEFINE_RES_MEM(0xe6151000, 0x188),
+		.cpus = { 0x100, 0x0101, 0x102, 0x103 },
+	}
+};
+
+static void __init r8a7742_smp_prepare_cpus(unsigned int max_cpus)
+{
+	/* let APMU code install data related to shmobile_boot_vector */
+	shmobile_smp_apmu_prepare_cpus(max_cpus,
+				r8a7742_apmu_config,
+				ARRAY_SIZE(r8a7742_apmu_config));
+
+	/* turn on power to SCU */
+	rcar_gen2_pm_init();
+	rcar_sysc_power_up(&r8a7742_ca15_scu);
+	rcar_sysc_power_up(&r8a7742_ca7_scu);
+}
+
+struct smp_operations r8a7742_smp_ops __initdata = {
+	.smp_prepare_cpus	= r8a7742_smp_prepare_cpus,
+	.smp_boot_secondary	= shmobile_smp_apmu_boot_secondary,
+#ifdef CONFIG_HOTPLUG_CPU
+	.cpu_can_disable	= shmobile_smp_cpu_can_disable,
+	.cpu_die		= shmobile_smp_apmu_cpu_die,
+	.cpu_kill		= shmobile_smp_apmu_cpu_kill,
+#endif
+};
\ No newline at end of file
-- 
2.7.4

