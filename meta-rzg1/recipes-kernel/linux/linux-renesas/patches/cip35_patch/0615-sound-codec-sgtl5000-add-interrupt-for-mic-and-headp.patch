From 724ad0c4c8e2f552b26674722a1e3c0f113c4a9f Mon Sep 17 00:00:00 2001
From: hienhuynh <hien.huynh.px@rvc.renenas.com>
Date: Thu, 4 Oct 2018 17:51:57 +0700
Subject: [PATCH 615/628] sound: codec: sgtl5000: add interrupt for mic and
 headphone detection

Add interrupt to detect plugging state of headphone and mic jacks.

Signed-off-by: hienhuynh <hien.huynh.px@rvc.renenas.com>
---
 sound/soc/codecs/sgtl5000.c | 88 +++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 88 insertions(+)

diff --git a/sound/soc/codecs/sgtl5000.c b/sound/soc/codecs/sgtl5000.c
index 527b759..754e365 100644
--- a/sound/soc/codecs/sgtl5000.c
+++ b/sound/soc/codecs/sgtl5000.c
@@ -29,6 +29,11 @@
 #include <sound/soc.h>
 #include <sound/soc-dapm.h>
 #include <sound/initval.h>
+#include <linux/err.h>
+#include <linux/irq.h>
+#include <linux/io.h>
+#include <linux/of_gpio.h>
+#include <linux/gpio.h>
 
 #include "sgtl5000.h"
 
@@ -74,6 +79,17 @@ static const struct reg_default sgtl5000_reg_defaults[] = {
 	{ SGTL5000_DAP_AVC_DECAY,		0x0050 },
 };
 
+struct sh_sgtl5000_priv {
+	int hp_gpio;
+	int hp_active_low;
+	int mic_gpio;
+	int mic_active_low;
+	int hp_irq;
+	int mic_irq;
+};
+
+static struct sh_sgtl5000_priv card_priv;
+
 /* regulator supplies for sgtl5000, VDDD is an optional external supply */
 enum sgtl5000_regulator_supplies {
 	VDDA,
@@ -145,6 +161,38 @@ static int mic_bias_event(struct snd_soc_dapm_widget *w,
 }
 
 /*
+ *Headphone Detect Handler
+ */
+static irqreturn_t hp_handler(int irq, void *dev_id)
+{
+	struct sh_sgtl5000_priv *priv = &card_priv;
+	int hp_status;
+
+	hp_status = gpio_get_value(priv->hp_gpio) ? 1 : 0;
+	if (hp_status != priv->hp_active_low)
+		pr_info("Headphone is plugged\n");
+	else
+		pr_info("Headphone is unplugged\n");
+	return IRQ_RETVAL(1);
+}
+
+/*
+ *Microphone Detect handler
+ */
+static irqreturn_t mic_handler(int irq, void *dev_id)
+{
+	struct sh_sgtl5000_priv *priv = &card_priv;
+	int mic_status;
+
+	mic_status = gpio_get_value(priv->mic_gpio) ? 1 : 0;
+	if (mic_status != priv->mic_active_low)
+		pr_info("Microphone is plugged\n");
+	else
+		pr_info("Microphone is unplugged\n");
+	return IRQ_RETVAL(1);
+}
+
+/*
  * As manual described, ADC/DAC only works when VAG powerup,
  * So enabled VAG before ADC/DAC up.
  * In power down case, we need wait 400ms when vag fully ramped down.
@@ -1087,6 +1135,9 @@ static int sgtl5000_probe(struct snd_soc_codec *codec)
 {
 	int ret;
 	struct sgtl5000_priv *sgtl5000 = snd_soc_codec_get_drvdata(codec);
+	struct sh_sgtl5000_priv *priv = &card_priv;
+	struct device_node *np;
+	int hp_status, mic_status;
 
 	/* power up sgtl5000 */
 	ret = sgtl5000_set_power_regs(codec);
@@ -1135,6 +1186,43 @@ static int sgtl5000_probe(struct snd_soc_codec *codec)
 	 */
 	snd_soc_write(codec, SGTL5000_DAP_CTRL, 0);
 
+/* Audio: HeadPhone and Mic Detect Implementation */
+	np = of_find_compatible_node(NULL, NULL, "fsl,sgtl5000");
+
+	priv->hp_gpio = of_get_named_gpio_flags(np, "hp-det-gpios", 0,
+			(enum of_gpio_flags *)&priv->hp_active_low);
+	if (gpio_is_valid(priv->hp_gpio)) {
+		gpio_request(priv->hp_gpio, "HeadPhone-Detect");
+		gpio_direction_input(priv->hp_gpio);
+		priv->hp_irq = gpio_to_irq(priv->hp_gpio);
+		hp_status = gpio_get_value(priv->hp_gpio) ? 1 : 0;
+
+		ret = request_irq(priv->hp_irq, hp_handler,
+			IRQF_TRIGGER_RISING | IRQF_TRIGGER_FALLING,
+			"HeadPhone", 0);
+		if (ret < 0) {
+			pr_alert("Request hp_irq failed with %d\n", ret);
+			free_irq(priv->hp_irq, 0);
+		}
+	}
+
+	priv->mic_gpio = of_get_named_gpio_flags(np, "mic-det-gpios", 0,
+			(enum of_gpio_flags *)&priv->mic_active_low);
+	if (gpio_is_valid(priv->mic_gpio)) {
+		gpio_request(priv->mic_gpio, "Microphone-Detect");
+		gpio_direction_input(priv->mic_gpio);
+		priv->mic_irq = gpio_to_irq(priv->mic_gpio);
+		mic_status = gpio_get_value(priv->mic_gpio) ? 1 : 0;
+
+		ret = request_irq(priv->mic_irq, mic_handler,
+			IRQF_TRIGGER_RISING | IRQF_TRIGGER_FALLING,
+			"MicroPhone", 0);
+		if (ret < 0) {
+			pr_alert("Request mic_irq failed with %d\n", ret);
+			free_irq(priv->mic_irq, 0);
+		}
+	}
+
 	return 0;
 
 err:
-- 
2.7.4

