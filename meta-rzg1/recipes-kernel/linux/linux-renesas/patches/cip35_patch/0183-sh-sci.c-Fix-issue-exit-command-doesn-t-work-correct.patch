From ca0f8590a7bea90ee25ed097954b9845f8bf1419 Mon Sep 17 00:00:00 2001
From: Loc Pham <loc.pham.xh@rvc.renesas.com>
Date: Wed, 1 Nov 2017 15:09:05 +0700
Subject: [PATCH 183/628] sh-sci.c: Fix issue "exit" command doesn't work
 correctly

Function "sci_tx_dma_release" usually receives NULL value from variable
"chan" when "exit" command is used on UART console terminal. When passing
"chan" as a parameter or uses its field members, function
"dmaengine_terminate_all", "dma_unmap_single", and "dma_release_channel"
will generate the error.

In conlusion, it's a good idea to call the above functions when "chan" is
not NULL. Moreover, the reason for removing the below message is that most
of the time "exit" command is called, terminal will display this message.
So, it will impact user's experience.

|    dev_warn(port->dev, "Failed preparing Tx DMA descriptor\n");

Signed-off-by: Loc Pham <loc.pham.xh@rvc.renesas.com>
Signed-off-by: Nguyen Van Linh [FGA.BU13] <LinhNV25@fsoft.com.vn>
Signed-off-by: vietn <vietn@fsoft.com.vn>
---
 drivers/tty/serial/sh-sci.c | 13 ++++++++-----
 1 file changed, 8 insertions(+), 5 deletions(-)

diff --git a/drivers/tty/serial/sh-sci.c b/drivers/tty/serial/sh-sci.c
index c136e3b..148e396 100644
--- a/drivers/tty/serial/sh-sci.c
+++ b/drivers/tty/serial/sh-sci.c
@@ -1157,10 +1157,14 @@ static void sci_tx_dma_release(struct sci_port *s, bool enable_pio)
 	s->chan_tx = NULL;
 	s->cookie_tx = -EINVAL;
 	spin_unlock_irqrestore(&port->lock, flags);
-	dmaengine_terminate_all(chan);
-	dma_unmap_single(chan->device->dev, s->tx_dma_addr, UART_XMIT_SIZE,
-			 DMA_TO_DEVICE);
-	dma_release_channel(chan);
+
+	if (chan) {
+		dmaengine_terminate_all(chan);
+		dma_unmap_single(chan->device->dev, s->tx_dma_addr, UART_XMIT_SIZE,
+				 DMA_TO_DEVICE);
+		dma_release_channel(chan);
+	}
+
 	if (enable_pio)
 		sci_start_tx(port);
 }
@@ -1232,7 +1236,6 @@ static void work_fn_tx(struct work_struct *work)
 					   DMA_MEM_TO_DEV,
 					   DMA_PREP_INTERRUPT | DMA_CTRL_ACK);
 	if (!desc) {
-		dev_warn(port->dev, "Failed preparing Tx DMA descriptor\n");
 		/* switch to PIO */
 		sci_tx_dma_release(s, true);
 		return;
-- 
2.7.4

