From 1d4c38965ad5188d019eef6956d10a99b3fdb207 Mon Sep 17 00:00:00 2001
From: vietn <vietn@fsoft.com.vn>
Date: Thu, 24 May 2018 14:16:56 +0700
Subject: [PATCH 254/628] serial: sh-sci: Fix deadlock between open and printk

	Commit: <20c584898195117e4a9ef5f6788bcb6b2f7d061a>
	From:	git://git.kernel.org/pub/scm/linux/kernel/git/horms/renesas-backport.git

	There is a deadlock between open and printk as follows.

	CPUA                CPUB
	---                 ----
	tty_open()          printk()
	...                 ...
	uart_port_startup()   serial_console_write()
	 uart_change_speed()   spin_lock(&port->lock)
	  sci_set_termios()     uart_console_write()
	   sci_reset()           serial_console_putchar()
	                          sci_poll_put_char()
	                           do {
	                               status = serial_port_in(port, SCxSR);
	                           } while (!(status & SCxSR_TDxE(port)));
	                           <waits forever>

	   spin_lock_irqsave(&port->lock, flags)
	   <waits forever>

	CPUA waits spin_lock_irqsave(&port->lock, flag) in sci_set_termios().
	CPUB waits for status of SCxSR_TDxE in sci_poll_putchar(). But status of
	SCxSR_TDxE is not changed, because sci_set_termios() does not complete.
	This patch fixes spin_lock_irqsave() / spin_unlock_irqrestore() for
	changing status of SCxSR_TDxE in sci_set_termios().

Signed-off-by: Kazuya Mizuguchi <kazuya.mizuguchi.ks@renesas.com>
Signed-off-by: tungvo <tung.vo.eb@rvc.renesas.com>
Signed-off-by: Nguyen Van Linh [FGA.BU13] <LinhNv25@fsoft.com.vn>
Signed-off-by: vietn <vietn@fsoft.com.vn>
---
 drivers/tty/serial/sh-sci.c | 12 ++++++++++++
 1 file changed, 12 insertions(+)

diff --git a/drivers/tty/serial/sh-sci.c b/drivers/tty/serial/sh-sci.c
index 148e396..d2ecf85 100644
--- a/drivers/tty/serial/sh-sci.c
+++ b/drivers/tty/serial/sh-sci.c
@@ -2057,6 +2057,7 @@ static void sci_set_termios(struct uart_port *port, struct ktermios *termios,
 	unsigned int baud, smr_val = 0, max_baud, cks = 0;
 	int t = -1;
 	unsigned int srr = 15;
+	unsigned long flags;
 
 	if ((termios->c_cflag & CSIZE) == CS7)
 		smr_val |= SCSMR_CHR;
@@ -2092,6 +2093,8 @@ static void sci_set_termios(struct uart_port *port, struct ktermios *termios,
 
 	sci_port_enable(s);
 
+	spin_lock_irqsave(&port->lock, flags);
+
 	sci_reset(port);
 
 	smr_val |= serial_port_in(port, SCSMR) & SCSMR_CKS;
@@ -2185,6 +2188,15 @@ static void sci_set_termios(struct uart_port *port, struct ktermios *termios,
 	if ((termios->c_cflag & CREAD) != 0)
 		sci_start_rx(port);
 
+	spin_unlock_irqrestore(&port->lock, flags);
+
+	dev_dbg(port->dev, "%s: SMR %x, cks %x, t %x, SCSCR %x\n",
+		__func__, smr_val, cks, t, s->cfg->scscr);
+
+#ifdef CONFIG_SERIAL_SH_SCI_DMA
+	dev_dbg(port->dev, "DMA Rx t-out %ums, tty t-out %u jiffies\n",
+		s->rx_timeout * 1000 / HZ, port->timeout);
+#endif
 	sci_port_disable(s);
 
 	if (UART_ENABLE_MS(port, termios->c_cflag))
-- 
2.7.4

