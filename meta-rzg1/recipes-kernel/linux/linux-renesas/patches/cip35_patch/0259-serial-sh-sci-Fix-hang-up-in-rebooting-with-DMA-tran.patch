From 87971035b6163828f86bc90340ba79cb113898a1 Mon Sep 17 00:00:00 2001
From: "Nguyen Van Linh [FGA.BU13]" <LinhNv25@fsoft.com.vn>
Date: Mon, 9 Apr 2018 23:32:00 +0700
Subject: [PATCH 259/628] serial: sh-sci: Fix hang-up in rebooting with DMA
 transfer enabled

	Commit: <14dac3ab246d8ecbab1442ea4969ee9a1b80ac6d>
	From:	git://git.kernel.org/pub/scm/linux/kernel/git/horms/renesas-backport.git

	If flush of UART ring buffer occurs just before starting DMA transfer
	(after executing schedule_work and before executing work_fn_tx),
	DMA transfer size becomes 0, and then SCIF driver calls BUG_ON.
	Therefore Linux hangs up.

	In order to avoid hang-up, this patch modifies BUG_ON with the condition
	same.

Signed-off-by: Ryuichi Ando <ryuichi.ando.jz@ps.hitachi-solutions.com>
Signed-off-by: Hiroki Negishi <hiroki.negishi.zr@hitachi-solutions.com>
Signed-off-by: Kazuya Mizuguchi <kazuya.mizuguchi.ks@renesas.com>
Signed-off-by: tungvo <tung.vo.eb@rvc.renesas.com>
Signed-off-by: Nguyen Van Linh [FGA.BU13] <LinhNv25@fsoft.com.vn>
Signed-off-by: vietn <vietn@fsoft.com.vn>
---
 drivers/tty/serial/sh-sci.c | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/drivers/tty/serial/sh-sci.c b/drivers/tty/serial/sh-sci.c
index 67ce742..a7d9c02 100644
--- a/drivers/tty/serial/sh-sci.c
+++ b/drivers/tty/serial/sh-sci.c
@@ -1250,6 +1250,11 @@ static void work_fn_tx(struct work_struct *work)
 		CIRC_CNT_TO_END(xmit->head, xmit->tail, UART_XMIT_SIZE));
 	spin_unlock_irq(&port->lock);
 
+	if (sg_dma_len(sg) == 0) {
+		s->cookie_tx = -EINVAL;
+		return;
+	}
+
 	desc = dmaengine_prep_slave_single(chan, buf, s->tx_dma_len,
 					   DMA_MEM_TO_DEV,
 					   DMA_PREP_INTERRUPT | DMA_CTRL_ACK);
-- 
2.7.4

